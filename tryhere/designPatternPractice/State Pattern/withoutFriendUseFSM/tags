!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AbstractState	MachineStates.hh	/^class AbstractState$/;"	c
Machine	Machine.cpp	/^Machine::Machine(int stockQuantity) $/;"	f	class:Machine
Machine	Machine.hh	/^class Machine$/;"	c
Normal	MachineStates.hh	/^    Normal() { std::cout<<"Normal state ctor called\\n"; };$/;"	f	class:Normal
Normal	MachineStates.hh	/^class Normal : public AbstractState$/;"	c
SoldOut	MachineStates.hh	/^    SoldOut() { std::cout<<"SoldOut state ctor called\\n"; };$/;"	f	class:SoldOut
SoldOut	MachineStates.hh	/^class SoldOut : public AbstractState$/;"	c
getCurrentStock	Machine.cpp	/^int Machine::getCurrentStock() {$/;"	f	class:Machine
mState	Machine.hh	/^    AbstractState* mState;$/;"	m	class:Machine
mStockQuantity	Machine.hh	/^    int mStockQuantity;$/;"	m	class:Machine
main	MachineFsm.cpp	/^int main() {$/;"	f
refill	Machine.cpp	/^void Machine::refill(int stockQuantity) {$/;"	f	class:Machine
refill	MachineStates.cpp	/^void Normal::refill(Machine *machine , int quantity)$/;"	f	class:Normal
refill	MachineStates.cpp	/^void SoldOut::refill(Machine *machine , int quantity)$/;"	f	class:SoldOut
sell	Machine.cpp	/^void Machine::sell(int stockQuantity) {$/;"	f	class:Machine
sell	MachineStates.cpp	/^void Normal::sell(Machine *machine , int quantity) {$/;"	f	class:Normal
sell	MachineStates.cpp	/^void SoldOut::sell(Machine *machine , int quantity) {$/;"	f	class:SoldOut
setCurrentState	Machine.cpp	/^void Machine::setCurrentState(AbstractState* currState)$/;"	f	class:Machine
updateStock	Machine.cpp	/^void Machine::updateStock(int quantity) {$/;"	f	class:Machine
~AbstractState	MachineStates.cpp	/^AbstractState::~AbstractState() $/;"	f	class:AbstractState
~Machine	Machine.cpp	/^Machine::~Machine() {$/;"	f	class:Machine
~Normal	MachineStates.cpp	/^Normal::~Normal() { std::cout << "Normal state dtor called.\\n"; }$/;"	f	class:Normal
~SoldOut	MachineStates.cpp	/^SoldOut::~SoldOut() { std::cout << " SoldOut state dtor called.\\n"; }$/;"	f	class:SoldOut
